<application>
  <component name="AppStorage">
    <histories>
      <item value="divide" />
      <item value="subtract" />
      <item value="multiply" />
      <item value="No Such Method Exception" />
      <item value="/ convenience method to get this element as a string value . @ return get this element as a string value . @ throws Class Cast Exception if the element is of not a {@ link Json Primitive } and is not a valid string value . @ throws Illegal State Exception if the element is of the type {@ link Json Array } but contains more than a single element . /" />
      <item value="Platform" />
      <item value="call" />
      <item value="site" />
      <item value="copy" />
      <item value="Defensive" />
      <item value="Defensive copy at call site ." />
      <item value="Column ' id ' in where clause is ambiguous" />
      <item value="loansing" />
      <item value="repayment" />
      <item value="loan Notice" />
      <item value="loan" />
      <item value="Transfer" />
      <item value="internal" />
      <item value="utilities" />
      <item value="/ Initialization hook for subclasses . This method is called in all constructors and pseudo - constructors ( clone , read Object ) after Hash Map has been initialized but before any entries have been inserted . ( In the absence of this method , read Object would require explicit knowledge of subclasses .) /" />
      <item value="Adds a member , which is a name - value pair , to self . The name must be a String , but the value can be an arbitrary Json Element , thereby allowing you to build a full tree of Json Elements rooted at this node ." />
      <item value="/ A class representing an object type in Json . An object consists of name - value pairs where names are strings , and values are any other type of {@ link Json Element }. This allows for a creating a tree of Json Elements . The member elements of this object are maintained in order they were added . @ author Inderjeet Singh @ author Joel Leitch /" />
      <item value="Parameterized Type" />
      <item value="/ A relative or absolute path , or full URL of the endpoint . This value is optional if the first parameter of the method is annotated with {@ link Url @ Url }. &lt; p &gt; See {@ linkplain retrofit 2. Retrofit . Builder # base Url ( Http Url ) base URL } for details of how this is resolved against a base URL to create the full endpoint URL . /" />
      <item value="/ Denotes that the request body will use form URL encoding . Fields should be declared as parameters and annotated with {@ link Field @ Field }. &lt; p &gt; Requests made with this annotation will have {@ code application / x - www - form - urlencoded } MIME type . Field names and values will be UTF -8 encoded before being URI - encoded in accordance to &lt; a href =&quot; http :// tools . ietf . org / html / rfc 3986&quot;&gt; RFC -3986&lt;/ a &gt;. /" />
      <item value="Named pair for a form - encoded request ." />
      <item value="/ Named pair for a form - encoded request . &lt; p &gt; Values are converted to strings using {@ link Retrofit # string Converter ( Type , Annotation [])} ( or {@ link Object # to String ()}, if no matching string converter is installed ) and then form URL encoded . {@ code null } values are ignored . Passing a {@ link java . util . List List } or array will result in a field pair for each non -{@ code null } item . &lt; p &gt; Simple Example : &lt; pre &gt;&lt; code &gt; &amp;#64; Form Url Encoded &amp;#64; POST (&quot;/&quot;) Call &amp; lt ; Response Body &amp; gt ; example ( &amp;#64; Field (&quot; name &quot;) String name , &amp;#64; Field (&quot; occupation &quot;) String occupation ); &lt;/ code &gt;&lt;/ pre &gt; Calling with {@ code foo . example (&quot; Bob Smith &quot;, &quot; President &quot;)} yields a request body of {@ code name = Bob + Smith &amp; occupation = President }. &lt; p &gt; Array / Varargs Example : &lt; pre &gt;&lt; code &gt; &amp;#64; Form Url Encoded &amp;#64; POST (&quot;/ list &quot;) Call &amp; lt ; Response Body &amp; gt ; example (@ Field (&quot; name &quot;) String ... names ); &lt;/ code &gt;&lt;/ pre &gt; Calling with {@ code foo . example (&quot; Bob Smith &quot;, &quot; Jane Doe &quot;)} yields a request body of {@ code name = Bob + Smith &amp; name = Jane + Doe }. @ see Form Url Encoded @ see Field Map /" />
      <item value="/ Use this annotation on a service method param when you want to directly control the request body of a POST / PUT request ( instead of sending in as request parameters or form - style request body ). The object will be serialized using the {@ link Retrofit Retrofit } instance {@ link Converter Converter } and the result will be set directly as the request body . &lt; p &gt; Body parameters may not be {@ code null }. /" />
      <item value="Mapped Statements collection" />
      <item value="Mapped Statements collection does not contain value for com . ivyb 2 b . oms . finance Cap Or Mat . entity . Financing Orders . select View" />
      <item value="enable - matrix - variables" />
      <item value="Standard xml based mvc config" />
      <item value="Enable swagger 2.0 spec" />
      <item value="Only needed in a non - springboot application" />
      <item value="@ Enable Swagger" />
      <item value="set Open Mode" />
      <item value="date Precision" />
      <item value="Controller Advice" />
      <item value="Detects handler methods at initialization ." />
      <item value="detect" />
      <item value="detect Handler Methods" />
      <item value="/ Whether the given type is a handler with handler methods . @ param bean Type the type of the bean being checked @ return &quot; true &quot; if this a handler type , &quot; false &quot; otherwise . / prote" />
      <item value="// JSR -330 API not available - Provider interface simply not supported then ." />
      <item value="// Java 8 not available - Optional references simply not supported then ." />
      <item value="Customize the {@ link Configurable Web Application Context } created by this Context Loader after config locations have been supplied to the context but before the context is &lt; em &gt; refreshed &lt;/ em &gt;. &lt; p &gt; The default implementation {@ linkplain # determine Context Initializer Classes ( Servlet Context ) determines } what ( if any ) context initializer classes have been specified through {@ linkplain # CONTEXT INITIALIZER CLASSES PARAM context init parameters } and {@ linkplain Application Context Initializer # initialize invokes each } with the given web application context . &lt; p &gt; Any {@ code Application Context Initializers } implementing {@ link org . springframework . core . Ordered Ordered } or marked with @{@ link org . springframework . core . annotation . Order Order } will be sorted appropriately ." />
      <item value="is Active" />
      <item value="The context has not yet been refreshed -&gt; provide services such as // setting the parent context , setting the application context id , etc" />
      <item value="Reflection Utils" />
      <item value="get Declared Constructor" />
      <item value="instantiate Class" />
    </histories>
  </component>
</application>