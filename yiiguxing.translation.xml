<application>
  <component name="AppStorage">
    <histories>
      <item value="bulk Upsert Sku Stock Flow" />
      <item value="Application Context Aware" />
      <item value="Initializing Bean" />
      <item value="Disposable Bean" />
      <item value="Thread Safety: After initialization, the instance can be regarded as thread-safe." />
      <item value="In most scenarios, this is the mostly recommended class to consume messages. Technically speaking, this push client is virtually a wrapper of the underlying pull service. Specifically, on arrival of messages pulled from brokers, it roughly invokes the registered callback handler to feed the messages. See quickstart/Consumer in the example module for a typical usage.&#10;Thread Safety: After initialization, the instance can be regarded as thread-safe." />
      <item value="See quickstart/Consumer in the example module for a typical usage." />
      <item value="Control which message can be select." />
      <item value="Retention" />
      <item value="environment.resolve Placeholders" />
      <item value="use env local_ip if not empty" />
      <item value="container Bean Name" />
      <item value="Bad annotation definition in @RocketMQMessageListener, messageModel BROADCASTING does not support ORDERLY message" />
      <item value="BROADCASTING" />
      <item value="Receive asynchronously delivered messages orderly. one queue, one thread" />
      <item value="Receive asynchronously delivered messages concurrently" />
      <item value="CONCURRENTLY" />
      <item value="ORDERLY" />
      <item value="Atomic Long" />
      <item value="Reports while loops which iterate over collections, and can be replaced with the foreach iteration syntax, which is available in Java 5 and newer." />
      <item value="This inspection only reports if the project or module is configured to use a language level of 5.0 or higher." />
      <item value="Degrade Exception" />
      <item value="Undeclared Throwable Exception" />
      <item value="Resolved" />
      <item value="name of the block exception function, empty by default" />
      <item value="name of the fallback function, empty by default" />
      <item value="add Sale Order Operation" />
      <item value="Sale Order Operation Req" />
      <item value="so Op Req" />
      <item value="This inspection only reports when the suggested replacement does not result in significant performance drawback on modern JVMs. In many cases the String concatenation may perform better" />
      <item value="Message Listener Concurrently" />
      <item value="stat" />
      <item value="stat By Product" />
      <item value="get During Pay" />
      <item value="期间应收与期间已收" />
      <item value="Total Income" />
      <item value="r Total Income" />
      <item value="Outlay" />
      <item value="Gwt Compatible" />
      <item value="fragment Size" />
      <item value="but supports multiple fields." />
      <item value="Multi Match" />
      <item value="Fuzzy" />
      <item value="loss" />
      <item value="loss delivery lock" />
      <item value="DEFAULT PAGE SIZE" />
      <item value="Constructs a query that will match only specific ids within all types." />
      <item value="A query that matches on all documents." />
      <item value="Constructs a new search source builder with a search query." />
      <item value="A query that parses a query string and runs it. There are two modes that this operates. The first, when no field is added (using QueryStringQueryBuilder.field(String), will run the query once and non prefixed fields will use the QueryStringQueryBuilder.defaultField(String) set. The second, when one or more fields are added (using QueryStringQueryBuilder.field(String)), will run the parsed query against the provided fields, and combine them either using DisMax or a plain boolean query (see QueryStringQueryBuilder.useDisMax(boolean))." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="835" />
        <entry key="ENGLISH" value="836" />
        <entry key="ARABIC" value="1" />
        <entry key="RUSSIAN" value="1" />
        <entry key="FRENCH" value="2" />
        <entry key="CATALAN" value="2" />
        <entry key="CORSICAN" value="1" />
        <entry key="ROMANIAN" value="2" />
        <entry key="MALAGASY" value="2" />
        <entry key="MALAY" value="1" />
        <entry key="SWEDISH" value="1" />
        <entry key="SLOVAK" value="2" />
        <entry key="WELSH" value="11" />
        <entry key="INDONESIAN" value="1" />
        <entry key="JAVANESE" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
  </component>
</application>