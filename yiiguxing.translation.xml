<application>
  <component name="AppStorage">
    <histories>
      <item value="summary By Pay Type" />
      <item value="Mock Bean" />
      <item value="Mockito will try to inject mocks only either by constructor injection, setter injection, or property injection in order and as described below. If any of the following strategy fail, then Mockito won't report failure; i.e. you will have to provide dependencies yourself." />
      <item value="Mark a field on which injection should be performed. Allows shorthand mock and spy injection. Minimizes repetitive mock and spy injection." />
      <item value="Mark a field on which injection should be performed.&#10;Allows shorthand mock and spy injection.&#10;Minimizes repetitive mock and spy injection." />
      <item value="Injectable constructors are annotated with @Inject and accept zero or more dependencies as arguments. @Inject can apply to at most one constructor per class." />
      <item value="Identifies injectable constructors, methods, and fields. May apply to static as well as instance members. An injectable member may have any access modifier (private, package-private, protected, public). Constructors are injected first, followed by fields, and then methods. Fields and methods in superclasses are injected before those in subclasses. Ordering of injection among fields and among methods in the same class is not specified." />
      <item value="init invoker factory" />
      <item value="admin-client (rpc invoker)" />
      <item value="Executor Registry" />
      <item value="xxl-job, executor JobLogFileCleanThread thread destory." />
      <item value="inner" />
      <item value="do not support inner class；" />
      <item value="、obj need private and set/get；" />
      <item value="sharding total" />
      <item value="sharding index" />
      <item value="mark Script" />
      <item value="destroy handler, invoked when JobThread destroy" />
      <item value="init handler, invoked when JobThread init" />
      <item value="fail timeout" />
      <item value="I Job Handler" />
      <item value="新访客判断标准，准确的判断是此查询结果（因为有可能之前有提交申请访问，不能只看update影响行数来断定）" />
      <item value="The default rejected execution handler" />
      <item value="Abort Policy" />
      <item value="ORDERNOTEXIST" />
      <item value="Signature" />
      <item value="check Collection" />
      <item value="query First Three Product Image" />
      <item value="Cash" />
      <item value="merge Function" />
      <item value="Allows passing an empty value" />
      <item value="allow Empty Value" />
      <item value="Specifies a reference to the corresponding type definition, overrides any other metadata specified" />
      <item value="Allows a model property to be designated as read only." />
      <item value="Allows a model property to be hidden in the Swagger model definition." />
      <item value="set Read Primary" />
      <item value="get Corporation Print Template" />
      <item value="Logic Service" />
      <item value=" Logic" />
      <item value="Debt" />
      <item value="Return {@code true} if there is a value present, otherwise {@code false}." />
      <item value="Caller Runs Policy" />
      <item value="Rejected Execution Handler" />
      <item value="Blocking Queue" />
      <item value="the queue to use for holding tasks before they are * executed. This queue will hold only the {@code Runnable} * tasks submitted by the {@code execute} method." />
      <item value="if one of the following holds:&lt;br&gt;" />
      <item value="the handler to use when execution is blocked * because the thread bounds and queue capacities are reached" />
      <item value="work Queue" />
      <item value="thread Factory" />
      <item value="finance Flow Items" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="970" />
        <entry key="ENGLISH" value="971" />
        <entry key="ARABIC" value="1" />
        <entry key="DANISH" value="1" />
        <entry key="RUSSIAN" value="1" />
        <entry key="FRENCH" value="2" />
        <entry key="CATALAN" value="2" />
        <entry key="CORSICAN" value="1" />
        <entry key="ROMANIAN" value="3" />
        <entry key="MALAGASY" value="2" />
        <entry key="MALAY" value="2" />
        <entry key="SWEDISH" value="2" />
        <entry key="SLOVAK" value="2" />
        <entry key="WELSH" value="11" />
        <entry key="SPANISH" value="1" />
        <entry key="INDONESIAN" value="1" />
        <entry key="JAVANESE" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
  </component>
</application>