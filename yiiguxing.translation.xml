<application>
  <component name="AppStorage">
    <histories>
      <item value="The destination for a message created from the return value of a method." />
      <item value="Listener threw exception" />
      <item value="Dispatcher has no subscribers" />
      <item value="Retry Policy Exhausted" />
      <item value="Provides the PollerMetadata options for the Messaging annotations for polled endpoints. It is an analogue of the XML &lt;poller/&gt; element, but provides only simple attributes. If the PollerMetadata requires more options (e.g. Transactional and other Advices) or initialDelay, receiveTimeout etc, the PollerMetadata should be configured as a generic bean and its bean name can be specified as the value attribute of this annotation. In that case, the other attributes are not allowed. Non-reference attributes support Property Placeholder resolutions." />
      <item value="Provides the PollerMetadata options for the Messaging annotations for polled endpoints. It is an analogue of the XML &lt;poller/&gt; element, but provides only simple attributes. If the PollerMetadata requires more options (e.g. Transactional and other Advices) or initialDelay, receiveTimeout etc, the PollerMetadata should be configured as a generic bean and its bean name can be specified as the value attribute of this annotation. In that case, the other attributes are not allowed.&#10;Non-reference attributes support Property Placeholder resolutions." />
      <item value="the Poller options for a polled endpoint (org.springframework.integration.scheduling.PollerMetadata). This attribute is an array just to allow an empty default (no poller). Only one Poller element is allowed. NOTE: a Poller here has Poller.maxMessagesPerPoll() set to 1 by default." />
      <item value="Cannot prepare queue for listener. Either the queue doesn't exist or the broker will not allow us to use it" />
      <item value="Consumer received fatal exception on startup" />
      <item value="java.io.IOException: null" />
      <item value="Failed to declare queue(s):[input.anonymous.gUrlTlafQTWCMDs-OjMR5A]" />
      <item value="Cannot prepare queue for listener. Either the queue doesn't exist or the broker will not allow us to use it." />
      <item value="channel error; protocol method: #method&lt;channel.close&gt;(reply-code=405, reply-text=RESOURCE_LOCKED - cannot obtain exclusive access to locked queue 'input.anonymous.hO0_-LypSoObV5NXW0xa3w' in vhost '/'. It could be originally declared on another connection or the exclusive property value does not match that of the original declaration., class-id=50, method-id=10)" />
      <item value="Skipping self join check for &quot;5e8dc40f0a71&quot; since the cluster is too small" />
      <item value="Rebalanced 1 servers," />
      <item value="UPDATE ACCOUNTID" />
      <item value="UPDATE" />
      <item value="DELETE" />
      <item value="ACCOUNTID" />
      <item value="If you want an embedded database please put a supported one on the classpath. If you have database settings to be loaded from a particular profile you may need to active it (no profiles are currently active)." />
      <item value="Cannot determine embedded database driver class for database type NONE" />
      <item value="The dependencies of some of the beans in the application context form a cycle:" />
      <item value="only support single node" />
      <item value="summary By Pay Type" />
      <item value="Mock Bean" />
      <item value="Mockito will try to inject mocks only either by constructor injection, setter injection, or property injection in order and as described below. If any of the following strategy fail, then Mockito won't report failure; i.e. you will have to provide dependencies yourself." />
      <item value="Mark a field on which injection should be performed. Allows shorthand mock and spy injection. Minimizes repetitive mock and spy injection." />
      <item value="Mark a field on which injection should be performed.&#10;Allows shorthand mock and spy injection.&#10;Minimizes repetitive mock and spy injection." />
      <item value="Injectable constructors are annotated with @Inject and accept zero or more dependencies as arguments. @Inject can apply to at most one constructor per class." />
      <item value="Identifies injectable constructors, methods, and fields. May apply to static as well as instance members. An injectable member may have any access modifier (private, package-private, protected, public). Constructors are injected first, followed by fields, and then methods. Fields and methods in superclasses are injected before those in subclasses. Ordering of injection among fields and among methods in the same class is not specified." />
      <item value="init invoker factory" />
      <item value="admin-client (rpc invoker)" />
      <item value="Executor Registry" />
      <item value="xxl-job, executor JobLogFileCleanThread thread destory." />
      <item value="inner" />
      <item value="do not support inner class；" />
      <item value="、obj need private and set/get；" />
      <item value="sharding total" />
      <item value="sharding index" />
      <item value="mark Script" />
      <item value="destroy handler, invoked when JobThread destroy" />
      <item value="init handler, invoked when JobThread init" />
      <item value="fail timeout" />
      <item value="I Job Handler" />
      <item value="新访客判断标准，准确的判断是此查询结果（因为有可能之前有提交申请访问，不能只看update影响行数来断定）" />
      <item value="The default rejected execution handler" />
      <item value="Abort Policy" />
      <item value="ORDERNOTEXIST" />
      <item value="Signature" />
      <item value="check Collection" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="996" />
        <entry key="ENGLISH" value="997" />
        <entry key="ARABIC" value="1" />
        <entry key="DANISH" value="1" />
        <entry key="RUSSIAN" value="1" />
        <entry key="FRENCH" value="2" />
        <entry key="CATALAN" value="2" />
        <entry key="CORSICAN" value="1" />
        <entry key="ROMANIAN" value="3" />
        <entry key="MALAGASY" value="2" />
        <entry key="MALAY" value="2" />
        <entry key="SWEDISH" value="2" />
        <entry key="SLOVAK" value="2" />
        <entry key="WELSH" value="11" />
        <entry key="SPANISH" value="1" />
        <entry key="INDONESIAN" value="1" />
        <entry key="JAVANESE" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
  </component>
</application>