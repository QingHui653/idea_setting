<application>
  <component name="AppStorage">
    <histories>
      <item value="md 5 Digest" />
      <item value="{'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'};" />
      <item value="MD 5_ALGORITHM NAME" />
      <item value="Miscellaneous methods for calculating digests. * * &lt;p&gt;Mainly for internal use within the framework; consider * &lt;a href=&quot;http://commons.apache.org/codec/&quot;&gt;Apache Commons Codec&lt;/a&gt; * for a more comprehensive suite of digest utilities." />
      <item value="Digest Utils" />
      <item value="Digest" />
      <item value="Switch concurrency 'off': that is, don't allow any concurrent invocations." />
      <item value="Permit any number of concurrent invocations: that is, don't throttle concurrency." />
      <item value="Support class for throttling concurrent access to a specific resource. * * &lt;p&gt;Designed for use as a base class, with the subclass invoking * the {@link #beforeAccess()} and {@link #afterAccess()} methods at * appropriate points of its workflow. Note that {@code afterAccess} * should usually be called in a finally block! * * &lt;p&gt;The default concurrency limit of this support class is -1 * (&quot;unbounded concurrency&quot;). Subclasses may override this default; * check the javadoc of the concrete class that you're using." />
      <item value="Auto Populating List" />
      <item value="this state invariant must be true" />
      <item value="this state invariant" />
      <item value="Illegal State Exception" />
      <item value="state" />
      <item value="Ant Path Matcher" />
      <item value="Alternative" />
      <item value="Alternative Jdk" />
      <item value="Alternative Jdk Id Generator" />
      <item value="Constructs a new {@code UUID} using the specified data. {@code * mostSigBits} is used for the most significant 64 bits of the {@code * UUID} and {@code leastSigBits} becomes the least significant 64 bits of * the {@code UUID}." />
      <item value="least Sig Bits" />
      <item value="most Sig Bits" />
      <item value="return responseUtil.buildSuccessResponse(payResponse.getRespMsg());" />
      <item value="role" />
      <item value="env" />
      <item value="time" />
      <item value="industry Id" />
      <item value="Map type to be used for key spaces must not be null!" />
      <item value="Store must not be null." />
      <item value="/** * The toJSONString method allows a class to produce its own JSON * serialization. * * @return String representation of JSON object * */" />
      <item value="key Space Map Type" />
      <item value="Map Key Value Adapter" />
      <item value="Release 2.1.1 (Lovelace SR1)." />
      <item value="Release 2.0.11 (Kay SR11)." />
      <item value="Full editing pass on reference documentation." />
      <item value="reference/mongodb-extended-json/ MongoDB Extended JSON" />
      <item value="The legacy representation of UUID used by the Java driver * * BSON binary subtype 3" />
      <item value="The legacy representation of UUID used by the Java driver" />
      <item value="Shape" />
      <item value="Provide an API for time-related service, such as getting the current time and waiting for * a given period of time. By default, these services are provided by actual time services * in the JDK (i.e. System.nanoTime(), System.currentTimeMillis(), Thread.sleep(), and * java.util.concurrent.locks.LockSupport.parkNanos()). However, if the property * LatencyUtils.useActualTime is set to &quot;false&quot;, TimeServers will only move the notion * of time in response to calls to the #setCurrentTime() method." />
      <item value="JSONObject.NULL is equivalent to the value that JavaScript calls null, * whilst Java's null is equivalent to the value that JavaScript calls * undefined." />
      <item value="Called for each attempt and retry" />
      <item value="cur Debt" />
      <item value="during Debt" />
      <item value="Entity Utils" />
      <item value="build Pick Order Context" />
      <item value="build Delivery Order Context" />
      <item value="corporation logo" />
      <item value="product Page" />
      <item value="SPEC COMPARE 2" />
      <item value="SPEC COMPARE" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="1583" />
        <entry key="ENGLISH" value="1584" />
        <entry key="ARABIC" value="1" />
        <entry key="IRISH" value="2" />
        <entry key="BULGARIAN" value="7" />
        <entry key="DANISH" value="2" />
        <entry key="RUSSIAN" value="2" />
        <entry key="FRENCH" value="7" />
        <entry key="HAUSA" value="1" />
        <entry key="DUTCH" value="3" />
        <entry key="CATALAN" value="3" />
        <entry key="CORSICAN" value="1" />
        <entry key="LATIN" value="2" />
        <entry key="ROMANIAN" value="4" />
        <entry key="MALAGASY" value="2" />
        <entry key="MALTESE" value="1" />
        <entry key="MALAY" value="2" />
        <entry key="NORWEGIAN" value="2" />
        <entry key="SWEDISH" value="2" />
        <entry key="SLOVAK" value="2" />
        <entry key="SOMALI" value="1" />
        <entry key="WELSH" value="11" />
        <entry key="SPANISH" value="2" />
        <entry key="ITALIAN" value="1" />
        <entry key="SUNDANESE" value="1" />
        <entry key="INDONESIAN" value="1" />
        <entry key="JAVANESE" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
  </component>
</application>