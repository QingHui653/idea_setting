<application>
  <component name="AppStorage">
    <histories>
      <item value="The number of bytes in a kilobyte." />
      <item value="select the first available meta server" />
      <item value="check whether /services/config is accessible" />
      <item value="* Select one available meta server from the comma separated meta server addresses, e.g. * http://1.2.3.4:8080,http://2.3.4.5:8080 * * &lt;br /&gt; * * In production environment, we still suggest using one single domain like http://config.xxx.com(backed by software * load balancers like nginx) instead of multiple ip addresses" />
      <item value="Return one meta server address. If multiple meta server addresses are configured, will select one" />
      <item value="Return meta server address. If multiple meta server addresses are configured, will return the comma separated string." />
      <item value="String metaServerAddress = getMetaServerAddress(env); // if there is more than one address, need to select one if (metaServerAddress.contains(&quot;,&quot;)) { return selectMetaServerAddress(metaServerAddress); }" />
      <item value="Return one meta server address. If multiple meta server addresses are configured, will select one." />
      <item value="// env -&gt; meta server address cache private static final Map&lt;Env, String&gt; metaServerAddressCache = Maps.newConcurrentMap(); private static volatile List&lt;MetaServerProvider&gt; metaServerProviders = null; private static final long REFRESH_INTERVAL_IN_SECOND = 60;// 1 min private static final Logger logger = LoggerFactory.getLogger(MetaDomainConsts.class); // comma separated meta server address -&gt; selected single meta server address cache private static final Map&lt;String, String&gt; selectedMetaServerAddressCache = Maps.newConcurrentMap(); private static final AtomicBoolean periodicRefreshStarted = new AtomicBoolean(false); private static final Object LOCK = new Object();" />
      <item value="if not found prefix 'spring.datasource.druid' jdbc properties ,'spring.datasource' prefix jdbc properties will be used." />
      <item value="云店转正拿客户信息，优先wx profile，没有则落到account找" />
      <item value="cloud Add Customer" />
      <item value="Bulk index all objects. Will do save or update" />
      <item value="Bulk update all objects. Will do update" />
      <item value="check For Bulk Update Failure" />
      <item value="eturns true if the write was acknowledged." />
      <item value="/** * Gets a value indicating whether the modified count is available. * &lt;p&gt; * The modified count is only available when all servers have been upgraded to 2.6 or above. * &lt;/p&gt; * @return true if the modified count is available */" />
      <item value="Gets a value indicating whether the modified count is available." />
      <item value="customer Tag" />
      <item value="industry Id" />
      <item value="Assert that the given String is not empty; that is, * it must not be {@code null} and not the empty String. * &lt;pre class=&quot;code&quot;&gt;Assert.hasLength(name, &quot;Name must not be empty&quot;);&lt;/pre&gt;" />
      <item value="if the text is empty" />
      <item value="Allow for defaults fallback or potentially overridden accessor" />
      <item value="Allow for defaults fallback or potentially overridden accessor..." />
      <item value="Context Loader" />
      <item value="Servlet Context Listener" />
      <item value="cur Debt" />
      <item value="clear Arrears Balance" />
      <item value="during Debt" />
      <item value="during Pay" />
      <item value="total Sale Debt" />
      <item value="https://pay.weixin.qq.com/wiki/doc/api/tools/cash coupon.php?chapter=13_4&amp;index=3" />
      <item value="https://api.mch.weixin.qq.com/mmpaymkttransfers/sendredpack" />
      <item value="https://pay.weixin.qq.com/wiki/doc/api/tools/cash coupon.php?chapter=13_5&amp;index=4" />
      <item value="https://api.mch.weixin.qq.com/mmpaymkttransfers/sendgroupredpack" />
      <item value="query Init Warehouse Flow" />
      <item value="sequence" />
      <item value="implementation" />
      <item value="/** * {@link org.mybatis.spring.annotation.MapperScan} ultimately ends up * creating instances of {@link MapperFactoryBean}. If * {@link org.mybatis.spring.annotation.MapperScan} is used then this * auto-configuration is not needed. If it is _not_ used, however, then this * will bring in a bean registrar and automatically register components based * on the same component-scanning path as Spring Boot itself. */" />
      <item value="txInfo information about the current transaction" />
      <item value="Do nothing if we didn't create a transaction." />
      <item value="Execute after successful completion of call, but not after an exception was handled." />
      <item value="This will normally result in a target object being invoked." />
      <item value="This is an around advice: Invoke the next interceptor in the chain." />
      <item value="clusterNode can be null when Constants.ON is false." />
      <item value="return pinyin if c is chinese in uppercase, String.valueOf(c) otherwise." />
      <item value="PINYIN CODE PADDING" />
      <item value="Creates a filter that performs a logical NOR operation on all the specified filters." />
      <item value="Message consume retry strategy * -1, no retry,put into DLQ directly * 0, broker control retry frequency * &gt;0, client control retry frequency." />
      <item value="fair" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="1429" />
        <entry key="ENGLISH" value="1430" />
        <entry key="ARABIC" value="1" />
        <entry key="IRISH" value="1" />
        <entry key="BULGARIAN" value="7" />
        <entry key="DANISH" value="2" />
        <entry key="RUSSIAN" value="2" />
        <entry key="FRENCH" value="6" />
        <entry key="HAUSA" value="1" />
        <entry key="CATALAN" value="3" />
        <entry key="CORSICAN" value="1" />
        <entry key="LATIN" value="2" />
        <entry key="ROMANIAN" value="4" />
        <entry key="MALAGASY" value="2" />
        <entry key="MALAY" value="2" />
        <entry key="SWEDISH" value="2" />
        <entry key="SLOVAK" value="2" />
        <entry key="SOMALI" value="1" />
        <entry key="WELSH" value="11" />
        <entry key="SPANISH" value="1" />
        <entry key="SUNDANESE" value="1" />
        <entry key="INDONESIAN" value="1" />
        <entry key="JAVANESE" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
  </component>
</application>