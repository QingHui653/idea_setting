<application>
  <component name="AppStorage">
    <histories>
      <item value="{ List&lt;AddSnReq&gt; listData = new ArrayList&lt;&gt;(); for (Object importData : importList) { String jsonStr = json.toJson(importData); Map&lt;String, String&gt; map = json.fromJson(jsonStr, Map.class); // 数据校验 StringBuilder logSb = new StringBuilder(); String errorMsg = importValidate(corpId, map, logSb); if (StringUtil.isNotBlank(errorMsg)) { log.warn(&quot;[SnTaskService.processRowData] validate fail! corpId:{},errorMsg:{}&quot;, corpId, logSb.toString()); map.put(&quot;tip&quot;, errorMsg); importErrorData.add(map); continue; } log.debug(&quot;[SnTaskService.processRowData] validate success!&quot;); AddSnReq snReq = new AddSnReq(); snReq.setSnNo(map.get(&quot;IMEI&quot;)); listData.add(snReq); } //接口调用,保存SN Response&lt;BatchAddSnRes&gt; response = taskFeignUtil.batchAdd(listData); if (response.success() &amp;&amp; response.getData() != null) { BatchAddSnRes data = response.getData(); List&lt;String&gt; failNoList = data.getFailNoList(); for (String failNo : failNoList) { HashMap&lt;String, String&gt; rowData = new HashMap&lt;&gt;(); rowData.put(&quot;IMEI&quot;, failNo); rowData.put(&quot;tip&quot;, failNo + &quot; 导入失败&quot;); log.warn(&quot;[SnTaskService.processRowData] fail! errorSN:{}&quot;, failNo); // 添加到失败列表 importErrorData.add(rowData); } } log.debug(&quot;[SnTaskService.processRowData] saveSn success! result:{}&quot;, response.getData()); }" />
      <item value="{ log.warn(&quot;[SnTaskService.processRowData] validate fail! corpId:{},errorMsg:{}&quot;, corpId, logSb.toString()); map.put(&quot;tip&quot;, errorMsg); importErrorData.add(map); continue; }" />
      <item value="Sn Task Service" />
      <item value="process Row Data" />
      <item value="Illegal character in path at index 60" />
      <item value="PAY RECORD EXPORT" />
      <item value="The text to enter into the dialog prompt before accepting. Used only if this * is a prompt dialog." />
      <item value="on Load Event Fired" />
      <item value="load Event Fired" />
      <item value="Actions and events related to the inspected page belong to the page domain." />
      <item value="nables page domain notifications." />
      <item value="Disables page domain notifications." />
      <item value="Deprecated, please use addScriptToEvaluateOnNewDocument instead." />
      <item value="eprecated, please use addScriptToEvaluateOnNewDocument instead. *" />
      <item value="/*- * #%L * cdt-java-client * %% * Copyright (C) 2018 - 2019 Kenan Klisura * %% * Licensed under the Apache License, Version 2.0 (the &quot;License&quot;); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an &quot;AS IS&quot; BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. * #L% */" />
      <item value="Base64-encoded pdf data. Empty if |returnAsStream| is specified. */" />
      <item value="receiver" />
      <item value="primitive" />
      <item value="缺纸" />
      <item value="preserve Sale Order Es" />
      <item value="log.warn(&quot;this corp has no receiver ! corpId:{}&quot;,addRemotePrintTaskReq.getCorpId());" />
      <item value="build Remote Print Result" />
      <item value="remote Print" />
      <item value="Product Cost Price" />
      <item value="discount Rate" />
      <item value="Create a StringBody from the specified text. * The MIME type is set to &quot;text/plain&quot;." />
      <item value="use constructor parameters of configuration API provided by HttpClient" />
      <item value="check Sale Authority" />
      <item value="query Pay Sign" />
      <item value="query Scan" />
      <item value="TYPE REACHABLE" />
      <item value="No available alive servers after 10 tries from load balancer" />
      <item value="Creates a match query with type &quot;PHRASE_PREFIX&quot; for the provided field name and text." />
      <item value="Creates a text query with type &quot;PHRASE&quot; for the provided field name and text." />
      <item value="he number of search hits to return. Defaults to &lt;tt&gt;10&lt;/tt&gt;." />
      <item value="The number of search hits to return. Defaults to &lt;tt&gt;10&lt;/tt&gt;." />
      <item value="perf" />
      <item value="Single" />
      <item value="letter Combinations" />
      <item value="build Union Lower Condition" />
      <item value="invalid" />
      <item value="Caller Runs Policy" />
      <item value="Implements Map.remove and related methods." />
      <item value="Removes the mapping for the specified key from this map if present." />
      <item value="refresh" />
      <item value="search Similar" />
      <item value="Chain using {@code AND}" />
      <item value="Static factory method to create a new Criteria for field with given name" />
      <item value="Creates a new Criteria with provided field name" />
      <item value="bulk Update By Query Sync" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="1659" />
        <entry key="ENGLISH" value="1661" />
        <entry key="ARABIC" value="1" />
        <entry key="IRISH" value="2" />
        <entry key="BULGARIAN" value="7" />
        <entry key="DANISH" value="2" />
        <entry key="RUSSIAN" value="2" />
        <entry key="FRENCH" value="7" />
        <entry key="HAUSA" value="1" />
        <entry key="DUTCH" value="3" />
        <entry key="CATALAN" value="3" />
        <entry key="CORSICAN" value="1" />
        <entry key="LATIN" value="2" />
        <entry key="ROMANIAN" value="5" />
        <entry key="MALAGASY" value="2" />
        <entry key="MALTESE" value="1" />
        <entry key="MALAY" value="2" />
        <entry key="NORWEGIAN" value="2" />
        <entry key="SWEDISH" value="2" />
        <entry key="SLOVAK" value="2" />
        <entry key="SOMALI" value="1" />
        <entry key="WELSH" value="11" />
        <entry key="SPANISH" value="2" />
        <entry key="ITALIAN" value="1" />
        <entry key="SUNDANESE" value="1" />
        <entry key="INDONESIAN" value="1" />
        <entry key="JAVANESE" value="2" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
  </component>
</application>