<application>
  <component name="AppStorage">
    <option name="newTranslationDialogHeight" value="488" />
    <option name="newTranslationDialogWidth" value="791" />
    <option name="newTranslationDialogX" value="879" />
    <option name="newTranslationDialogY" value="486" />
    <option name="pinNewTranslationDialog" value="true" />
    <histories>
      <item value="DEFLATE" />
      <item value="get Sms Channel" />
      <item value="validate Cash Lock" />
      <item value="suite User Id" />
      <item value="Round Robin Rule" />
      <item value="Distributor" />
      <item value="total Received" />
      <item value="Creates builder object for construction of custom CloseableHttpClient instances." />
      <item value="Creates CloseableHttpClient instance with default configuration." />
      <item value="instance with default configuration based on ssytem properties." />
      <item value="Creates {@link CloseableHttpClient} instance that implements the most basic HTTP protocol support." />
      <item value="Unsupported operator attention:self." />
      <item value="The from part of the range query. Null indicates unbounded. In case lower bound is assigned to a string, we internally convert it to a {@link BytesRef} because in {@link RangeQueryBuilder} field are later parsed as {@link BytesRef} and we need internal representation of query to be equal regardless of whether it was created from XContent or via Java API." />
      <item value="Should the lower bound be included or not." />
      <item value="Should the lower bound be included or not. Defaults to &lt;tt&gt;true&lt;tt&gt;." />
      <item value="The to part of the range query. Null indicates unbounded." />
      <item value="get Verify Cert Info" />
      <item value="Creates a &lt;code&gt;FileInputStream&lt;code&gt; by opening a connection to an actual file, the file named by the path name &lt;code&gt;name&lt;code&gt; in the file system. A new &lt;code&gt;FileDescriptor&lt;code&gt; object is created to represent this file connection. &lt;p&gt; First, if there is a security manager, its &lt;code&gt;checkRead&lt;code&gt; method is called with the &lt;code&gt;name&lt;code&gt; argument as its argument. &lt;p&gt; If the named file does not exist, is a directory rather than a regular file, or for some other reason cannot be opened for reading then a &lt;code&gt;FileNotFoundException&lt;code&gt; is thrown." />
      <item value="the system-dependent file name." />
      <item value="Handler dispatch failed; nested exception is java.lang.NoClassDefFoundError: Could not initialize class cfca.sadk.lib.crypto.JCrypto" />
      <item value="A filter to filter only documents where a field exists in them." />
      <item value="clear order version expire" />
      <item value="STATEMENT" />
      <item value="STATEMENT ORDER" />
      <item value="application" />
      <item value="220111000014" />
      <item value="A list of tags for API documentation control. Tags can be used for logical grouping of operations by resources or any other qualifier. A non-empty value will override the value provided in value()." />
      <item value="remote stacktrace: Backtrace:" />
      <item value="uninstall Driver Event" />
      <item value="sign" />
      <item value="get Expire" />
      <item value="BASE CHAR NUMBER" />
      <item value="retrieve up to 10 causes" />
      <item value="Determines an output value based on an input value; a pre-Java-8 version of java.util.function.Function. The Functions class provides common functions and related utilites. See the Guava User Guide article on the use of Function. For Java 8+ users This interface is now a legacy type. Use java.util.function.Function (or the appropriate primitive specialization such as ToIntFunction) instead whenever possible. Otherwise, at least reduce explicit dependencies on this type by using lambda expressions or method references instead of classes, leaving your code easier to migrate in the future. To use an existing function (say, named function) in a context where the other type of function is expected, use the method reference function::apply. A future version of com.google.common.base.Function will be made to extend java.util.function.Function, making conversion code necessary only in one direction. At that time, this interface will be officially discouraged." />
      <item value="Injector" />
      <item value="Apollo Injector" />
      <item value="The comma-separated list of namespace names to integrate with Spring property sources. If not specified, then default to application namespace." />
      <item value="Apollo configuration section to integrate with Spring" />
      <item value="Interface that encapsulates event publication functionality. Serves as super-interface for ApplicationContext. 自: 1.1.1" />
      <item value="Use this annotation to register Apollo ConfigChangeListener." />
      <item value="Replacement for Class.forName() that also returns Class instances for primitives (e.g. &quot;int&quot;) and array class names (e.g. &quot;String[]&quot;). Furthermore, it is also capable of resolving inner class names in Java source style (e.g. &quot;java.lang.Thread.State&quot; instead of &quot;java.lang.ThreadState&quot;). 形参: name – the name of the Class" />
      <item value="parent Bean Factory" />
      <item value="prototype" />
      <item value="When used as a type-level annotation in conjunction with @Component, @Scope indicates the name of a scope to use for instances of the annotated type. When used as a method-level annotation in conjunction with @Bean, @Scope indicates the name of a scope to use for the instance returned from the method. NOTE: @Scope annotations are only introspected on the concrete bean class (for annotated components) or the factory method (for @Bean methods). In contrast to XML bean definitions, there is no notion of bean definition inheritance, and inheritance hierarchies at the class level are irrelevant for metadata purposes. In this context, scope means the lifecycle of an instance, such as singleton, prototype, and so forth. Scopes provided out of the box in Spring may be referred to using the SCOPE_ constants available in the ConfigurableBeanFactory and WebApplicationContext interfaces. To register additional custom scopes, see CustomScopeConfigurer." />
      <item value="RUNTIME" />
      <item value="Element Type" />
      <item value="Scope" />
      <item value="multi" />
      <item value="Annotation which indicates that a method parameter should be bound to a web request header. &lt;p&gt;Supported for annotated handler methods in Servlet and Portlet environments. &lt;p&gt;If the method parameter is {@link java.util.Map Map&amp;lt;String, String&amp;gt;}, {@link org.springframework.util.MultiValueMap MultiValueMap&amp;lt;String, String&amp;gt;}, or {@link org.springframework.http.HttpHeaders HttpHeaders} then the map is populated with all header names and values." />
      <item value="Request Header" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="2302" />
        <entry key="ENGLISH" value="2303" />
        <entry key="ARABIC" value="1" />
        <entry key="IRISH" value="2" />
        <entry key="BULGARIAN" value="9" />
        <entry key="ICELANDIC" value="1" />
        <entry key="DANISH" value="3" />
        <entry key="GERMAN" value="1" />
        <entry key="RUSSIAN" value="3" />
        <entry key="FRENCH" value="20" />
        <entry key="FINNISH" value="2" />
        <entry key="HAUSA" value="1" />
        <entry key="DUTCH" value="10" />
        <entry key="CATALAN" value="4" />
        <entry key="CORSICAN" value="1" />
        <entry key="LATIN" value="2" />
        <entry key="ROMANIAN" value="7" />
        <entry key="MALAGASY" value="2" />
        <entry key="MALTESE" value="1" />
        <entry key="MALAY" value="3" />
        <entry key="NORWEGIAN" value="3" />
        <entry key="SWEDISH" value="5" />
        <entry key="SAMOAN" value="1" />
        <entry key="SLOVAK" value="2" />
        <entry key="SOMALI" value="1" />
        <entry key="WELSH" value="11" />
        <entry key="SPANISH" value="3" />
        <entry key="GREEK" value="1" />
        <entry key="ITALIAN" value="2" />
        <entry key="HINDI" value="1" />
        <entry key="SUNDANESE" value="1" />
        <entry key="INDONESIAN" value="4" />
        <entry key="JAVANESE" value="2" />
        <entry key="VIETNAMESE" value="3" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1647830266304" />
  </component>
  <component name="Settings">
    <option name="aliTranslateSettings">
      <app-key>
        <option name="appId" value="LTAIfwSYUEMm05AS" />
      </app-key>
    </option>
    <option name="baiduTranslateSettings">
      <app-key>
        <option name="appId" value="20220105001047030" />
      </app-key>
    </option>
  </component>
</application>