<application>
  <component name="AppStorage">
    <histories>
      <item value="media Size" />
      <item value="font Size" />
      <item value="status" />
      <item value="ver" />
      <item value="preserve" />
      <item value="is Ex Warehouse" />
      <item value="余额财务流水" />
      <item value="We're running in a tool (an IDE plugin for example). We need binding meta data but not a * functioning Injector. Do not inject members of instances. Do not load eager singletons. Do as * little as possible so our tools run nice and snappy. Injectors created in this stage cannot * be used to satisfy injections." />
      <item value="The stage we're running in." />
      <item value="Apply this to implementation classes when you want only one instance * (per {@link Injector}) to be reused for all injections for that binding." />
      <item value="Bob Lee" />
      <item value="crazybob@google.com" />
      <item value="Signifies that a public API (public class, method or field) is subject to incompatible changes, or even removal, in a future release. An API bearing this annotation is exempt from any compatibility guarantees made by its containing library. Note that the presence of this annotation implies nothing about the quality or performance of the API in question, only the fact that it is not &quot;API-frozen.&quot;&#10;It is generally safe for applications to depend on beta APIs, at the cost of some extra work during upgrades. However it is generally inadvisable for libraries (which get included on users' CLASSPATHs, outside the library developers' control) to do so." />
      <item value="Returns a splitter that uses the given single-character separator. For example," />
      <item value="Transfer Util" />
      <item value="Transfer" />
      <item value="Sequence工具" />
      <item value="不要使用GSON, 在对象稍大时非常缓慢." />
      <item value="CityHashUtil google的CityHash，比md5更高效，散列效果也很均衡" />
      <item value="zcg" />
      <item value="Concrete implementation should implement this method so that the configuration set via * {@link IClientConfig} (which in turn were set via Archaius properties) will be taken into consideration" />
      <item value="init With Niws Config" />
      <item value="No available alive servers after 10 tries from load balancer:" />
      <item value="yield" />
      <item value="Feature that determines whether encountering of unknown properties (ones that do not map to a property, and there is no &quot;any setter&quot; or handler that can handle it) should result in a failure (by throwing a JsonMappingException) or not. This setting only takes effect after all other handling methods for unknown properties have been tried, and property remains unhandled.&#10;Feature is enabled by default (meaning that a JsonMappingException will be thrown if an unknown property is encountered)." />
      <item value="Feature that determines whether encountering of unknown properties (ones that do not map to a property, and there is no &quot;any setter&quot; or handler that can handle it) should result in a failure (by throwing a JsonMappingException) or not. This setting only takes effect after all other handling methods for unknown properties have been tried, and property remains unhandled. Feature is enabled by default (meaning that a JsonMappingException will be thrown if an unknown property is encountered)." />
      <item value="caiqibang" />
      <item value="Log" />
      <item value="remove All Emojis" />
      <item value="// 申请访问需要知道申请访问哪个店铺，corpId必填" />
      <item value="Mini Program" />
      <item value="request.get Phone" />
      <item value="生成6位验证码" />
      <item value="TMP EXPIRE TIME" />
      <item value="300000" />
      <item value="@Scheduled(fixedRate=1000) public void work() { // task execution logic }" />
      <item value="This enables detection of @Scheduled annotations on any Spring-managed bean in the container. For example, given a class MyTas" />
      <item value="This enables detection of @Scheduled annotations on any Spring-managed bean in the container. For example, given a class MyTask" />
      <item value="Enables Spring's scheduled task execution capability, similar to functionality found in Spring's &lt;task:*&gt; XML namespace. To be used on @Configuration classes as follows:" />
      <item value="Single Sign On Util" />
      <item value="format Big Decimal String" />
      <item value="query Delivery Order Product By Page" />
      <item value="execution" />
      <item value="bulk Upsert Sku Stock Flow" />
      <item value="Application Context Aware" />
      <item value="Initializing Bean" />
      <item value="Disposable Bean" />
      <item value="Thread Safety: After initialization, the instance can be regarded as thread-safe." />
      <item value="In most scenarios, this is the mostly recommended class to consume messages. Technically speaking, this push client is virtually a wrapper of the underlying pull service. Specifically, on arrival of messages pulled from brokers, it roughly invokes the registered callback handler to feed the messages. See quickstart/Consumer in the example module for a typical usage.&#10;Thread Safety: After initialization, the instance can be regarded as thread-safe." />
      <item value="See quickstart/Consumer in the example module for a typical usage." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="867" />
        <entry key="ENGLISH" value="868" />
        <entry key="ARABIC" value="1" />
        <entry key="RUSSIAN" value="1" />
        <entry key="FRENCH" value="2" />
        <entry key="CATALAN" value="2" />
        <entry key="CORSICAN" value="1" />
        <entry key="ROMANIAN" value="2" />
        <entry key="MALAGASY" value="2" />
        <entry key="MALAY" value="2" />
        <entry key="SWEDISH" value="1" />
        <entry key="SLOVAK" value="2" />
        <entry key="WELSH" value="11" />
        <entry key="SPANISH" value="1" />
        <entry key="INDONESIAN" value="1" />
        <entry key="JAVANESE" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
  </component>
</application>