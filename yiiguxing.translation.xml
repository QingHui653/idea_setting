<application>
  <component name="AppStorage">
    <histories>
      <item value="check Entry Not Null" />
      <item value="&lt;p&gt;The returned collection isn't threadsafe or serializable, even if * {@code unfiltered} is." />
      <item value="* &lt;p&gt;Many of the filtered collection's methods, such as {@code size()}, * iterate across every element in the underlying collection and determine * which elements satisfy the filter. When a live view is &lt;i&gt;not&lt;/i&gt; needed, * it may be faster to copy {@code Iterables.filter(unfiltered, predicate)} * and use the copy." />
      <item value="Returns the elements of {@code unfiltered} that satisfy a predicate. The * returned collection is a live view of {@code unfiltered}; changes to one * affect the other. * * &lt;p&gt;The resulting collection's iterator does not support {@code remove()}, * but all other collection methods are supported. When given an element that * doesn't satisfy the predicate, the collection's {@code add()} and {@code * addAll()} methods throw an {@link IllegalArgumentException}. When methods * such as {@code removeAll()} and {@code clear()} are called on the filtered * collection, only elements that satisfy the filter will be removed from the * underlying collection." />
      <item value="Provides static methods for working with {@code Collection} instances." />
      <item value="Gwt Compatible" />
      <item value="only" />
      <item value="only element ollection." />
      <item value="Cell" />
      <item value="Doug Lea" />
      <item value="DEFAULT INITIAL CAPACITY" />
      <item value="Case" />
      <item value="Hyphenated variable naming convention, e.g., &quot;lower-hyphen&quot;." />
      <item value="encoded Length" />
      <item value="propagate If Instance Of" />
      <item value="compose" />
      <item value="public static &lt;F, T&gt; Supplier&lt;T&gt; compose(Function&lt;? super F, T&gt; function, Supplier&lt;F&gt; supplier) {" />
      <item value="Funnels" />
      <item value="Small Char Matcher" />
      <item value="dicates" />
      <item value="enum singleton pattern" />
      <item value="referent" />
      <item value="@return &lt;code&gt;true&lt;/code&gt; if this reference object was successfully * enqueued; &lt;code&gt;false&lt;/code&gt; if it was already enqueued or if * it was not registered with a queue when it was created" />
      <item value="&lt;p&gt; This method is invoked only by Java code; when the garbage collector * enqueues references it does so directly, without invoking this method." />
      <item value="Adds this reference object to the queue with which it is registered, * if any." />
      <item value="google" />
      <item value="populate" />
      <item value="populate Cache" />
      <item value="private static &lt;T extends Enum&lt;T&gt;&gt; Map&lt;String, WeakReference&lt;? extends Enum&lt;?&gt;&gt;&gt; populateCache(" />
      <item value="java.lang.ref.Weak Reference" />
      <item value="ISO-8859-1: ISO Latin Alphabet Number 1 (ISO-LATIN-1)." />
      <item value="Preconditions" />
      <item value="Visible For Testing" />
      <item value="If a hostname is not a key in the EXCLUDE map, and if removing its * leftmost component results in a name which is a key in this map, it is a * public suffix." />
      <item value="If a hostname is contained as a key in this map, it is a public suffix." />
      <item value="Creates a RateLimiter with the specified stable throughput, given as &quot;permits per second&quot; (commonly referred to as QPS, queries per second). The returned RateLimiter ensures that on average no more than permitsPerSecond are issued during any given second, with sustained requests being smoothly spread over each second. When the incoming request rate exceeds permitsPerSecond the rate limiter will release one permit every (1.0 / permitsPerSecond) seconds. When the rate limiter is unused, bursts of up to permitsPerSecond permits will be allowed, with subsequent requests being smoothly limited at the stable rate of permitsPerSecond." />
      <item value="TODO(user): &quot;This is equivalent to // {@code createWithCapacity(permitsPerSecond, 1, TimeUnit.SECONDS)}" />
      <item value="SN USER NOT MATCH" />
      <item value="counteract Detail" />
      <item value="failed to get chrome instance" />
      <item value="discount" />
      <item value="concurrent limiter acquire failed, waiting" />
      <item value="current Limit" />
      <item value="Scheduled Executor Service" />
      <item value="Maintenance" />
      <item value="Maintanance" />
      <item value="available Processors" />
      <item value="Fired when page is about to send HTTP request." />
      <item value="Tells whether clearing browser cache is supported." />
      <item value="Returns the Network command." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="1990" />
        <entry key="ENGLISH" value="1991" />
        <entry key="ARABIC" value="1" />
        <entry key="IRISH" value="2" />
        <entry key="BULGARIAN" value="9" />
        <entry key="ICELANDIC" value="1" />
        <entry key="DANISH" value="2" />
        <entry key="GERMAN" value="1" />
        <entry key="RUSSIAN" value="3" />
        <entry key="FRENCH" value="11" />
        <entry key="FINNISH" value="2" />
        <entry key="HAUSA" value="1" />
        <entry key="DUTCH" value="10" />
        <entry key="CATALAN" value="4" />
        <entry key="CORSICAN" value="1" />
        <entry key="LATIN" value="2" />
        <entry key="ROMANIAN" value="6" />
        <entry key="MALAGASY" value="2" />
        <entry key="MALTESE" value="1" />
        <entry key="MALAY" value="3" />
        <entry key="NORWEGIAN" value="3" />
        <entry key="SWEDISH" value="4" />
        <entry key="SAMOAN" value="1" />
        <entry key="SLOVAK" value="2" />
        <entry key="SOMALI" value="1" />
        <entry key="WELSH" value="11" />
        <entry key="SPANISH" value="2" />
        <entry key="GREEK" value="1" />
        <entry key="ITALIAN" value="2" />
        <entry key="SUNDANESE" value="1" />
        <entry key="INDONESIAN" value="4" />
        <entry key="JAVANESE" value="2" />
        <entry key="VIETNAMESE" value="2" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
    <option name="translateDocumentation" value="true" />
  </component>
</application>