<application>
  <component name="AppStorage">
    <histories>
      <item value="Stock Finance Flow Item" />
      <item value="remove For Duplicate" />
      <item value="assist Stats Detail" />
      <item value="Field injection is not recommended less... (Ctrl+F1) Inspection info: Spring Team recommends: &quot;Always use constructor based dependency injection in your beans. Always use assertions for mandatory dependencies&quot;." />
      <item value="Implicitly sets a tag for the operations, legacy support (read description).&#10;In swagger-core 1.3.X, this was used as the 'path' that is to host the API Declaration of the resource. This is no longer relevant in swagger-core 1.5.X.&#10;If tags() is not used, this value will be used to set the tag for the operations described by this resource. Otherwise, the value will be ignored.&#10;The leading / (if exists) will be removed." />
      <item value="Not used in 1.5.X, kept for legacy support." />
      <item value="saleorder finance" />
      <item value="lways use constructor based dependency injection in your beans. Always use assertions for mandatory dependencies&quot;." />
      <item value="error Limit" />
      <item value="peek" />
      <item value="finance flow can not modify" />
      <item value="To Int Bi Function" />
      <item value="Constant for the &quot;CJK Compatibility Ideographs&quot; Unicode character * block." />
      <item value="Outlay" />
      <item value="query Customer Outlay" />
      <item value="Returns a stream consisting of the elements of this stream, sorted according to natural order. If the elements of this stream are not Comparable, a java.lang.ClassCastException may be thrown when the terminal operation is executed. For ordered streams, the sort is stable. For unordered streams, no stability guarantees are made. This is a stateful intermediate operation." />
      <item value="Returns a stream consisting of the elements of this stream, sorted according to natural order. If the elements of this stream are not Comparable, a java.lang.ClassCastException may be thrown when the terminal operation is executed.&#10;For ordered streams, the sort is stable. For unordered streams, no stability guarantees are made.&#10;This is a stateful intermediate operation." />
      <item value="先将ID排序，再分批次查询，一批100条" />
      <item value="Returns a stream consisting of the results of replacing each element of this stream with the contents of a mapped stream produced by applying the provided mapping function to each element. Each mapped stream is closed after its contents have been placed into this stream. (If a mapped stream is null an empty stream is used, instead.)" />
      <item value="product No" />
      <item value="ELEMENT LEVEL" />
      <item value="product Spec Element Id 3" />
      <item value="product Spec Element Id 2" />
      <item value="product Spec Element Id 1" />
      <item value="Returns a possibly parallel Stream with this collection as its source. It is allowable for this method to return a sequential stream. This method should be overridden when the spliterator() method cannot return a spliterator that is IMMUTABLE, CONCURRENT, or late-binding. (See spliterator() for details.)" />
      <item value="Returns a possibly parallel Stream with this collection as its source. It is allowable for this method to return a sequential stream.&#10;This method should be overridden when the spliterator() method cannot return a spliterator that is IMMUTABLE, CONCURRENT, or late-binding. (See spliterator() for details.)" />
      <item value="parallel Stream" />
      <item value="sequence" />
      <item value="invoke" />
      <item value="contract" />
      <item value="formatter" />
      <item value="A builder for creating Feign clients without using the {@link FeignClient} annotation. * &lt;p&gt; * This builder builds the Feign client exactly like it would be created by using the * {@link FeignClient} annotation." />
      <item value="A builder for creating Feign clients without using the {@link FeignClient} annotation. * &lt;p&gt;" />
      <item value="This builder builds the Feign client exactly like it would be created by using the * {@link FeignClient} annotation." />
      <item value="A builder for creating Feign clients without using the FeignClient annotation.&#10;This builder builds the Feign client exactly like it would be created by using the FeignClient annotation." />
      <item value="A factory that creates instances of feign classes. It creates a Spring * ApplicationContext per client name, and extracts the beans that it needs from there." />
      <item value="Allows an application to customize the Feign {@link FormattingConversionService}." />
      <item value="WARNING! Nothing in this class should be @Autowired. It causes NPEs because of some lifecycle race condition." />
      <item value="the bean factory to register with" />
      <item value="Register the given bean definition with the given bean factory." />
      <item value="verify annotated class is an interface" />
      <item value="Fallback class for the specified Feign client interface. The fallback class must * implement the interface annotated by this annotation and be a valid spring bean." />
      <item value="FIXME annotation.getAliasedString(&quot;name&quot;, FeignClient.class, null);" />
      <item value="This blows up if an aliased property is overspecified" />
      <item value="is Candidate Component" />
      <item value="Candidate" />
      <item value="This argument is required, it must not be null" />
      <item value="Helper class to create a {@link TypeFilter} that matches if all the delegates * match." />
      <item value="generic" />
      <item value="generic Bean Definition" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="927" />
        <entry key="ENGLISH" value="928" />
        <entry key="ARABIC" value="1" />
        <entry key="RUSSIAN" value="1" />
        <entry key="FRENCH" value="2" />
        <entry key="CATALAN" value="2" />
        <entry key="CORSICAN" value="1" />
        <entry key="ROMANIAN" value="2" />
        <entry key="MALAGASY" value="2" />
        <entry key="MALAY" value="2" />
        <entry key="SWEDISH" value="1" />
        <entry key="SLOVAK" value="2" />
        <entry key="WELSH" value="11" />
        <entry key="SPANISH" value="1" />
        <entry key="INDONESIAN" value="1" />
        <entry key="JAVANESE" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
  </component>
</application>