<application>
  <component name="AppStorage">
    <histories>
      <item value="role" />
      <item value="env" />
      <item value="time" />
      <item value="industry Id" />
      <item value="Map type to be used for key spaces must not be null!" />
      <item value="Store must not be null." />
      <item value="/** * The toJSONString method allows a class to produce its own JSON * serialization. * * @return String representation of JSON object * */" />
      <item value="key Space Map Type" />
      <item value="Map Key Value Adapter" />
      <item value="Release 2.1.1 (Lovelace SR1)." />
      <item value="Release 2.0.11 (Kay SR11)." />
      <item value="Full editing pass on reference documentation." />
      <item value="reference/mongodb-extended-json/ MongoDB Extended JSON" />
      <item value="The legacy representation of UUID used by the Java driver * * BSON binary subtype 3" />
      <item value="The legacy representation of UUID used by the Java driver" />
      <item value="Shape" />
      <item value="Provide an API for time-related service, such as getting the current time and waiting for * a given period of time. By default, these services are provided by actual time services * in the JDK (i.e. System.nanoTime(), System.currentTimeMillis(), Thread.sleep(), and * java.util.concurrent.locks.LockSupport.parkNanos()). However, if the property * LatencyUtils.useActualTime is set to &quot;false&quot;, TimeServers will only move the notion * of time in response to calls to the #setCurrentTime() method." />
      <item value="JSONObject.NULL is equivalent to the value that JavaScript calls null, * whilst Java's null is equivalent to the value that JavaScript calls * undefined." />
      <item value="Called for each attempt and retry" />
      <item value="cur Debt" />
      <item value="during Debt" />
      <item value="Entity Utils" />
      <item value="build Pick Order Context" />
      <item value="build Delivery Order Context" />
      <item value="corporation logo" />
      <item value="product Page" />
      <item value="SPEC COMPARE 2" />
      <item value="SPEC COMPARE" />
      <item value="IS TEXT MODE" />
      <item value="dirty work" />
      <item value="autoescape" />
      <item value="make Spec Table Data" />
      <item value="pre Process" />
      <item value="render" />
      <item value="Crypt" />
      <item value="Wx Ma Crypt Utils" />
      <item value="canonical, avoids branching, which matters more than alu ops" />
      <item value="Class for miscellaneous helper methods." />
      <item value="Matrix" />
      <item value="WritableDataSource&lt;List&lt;ParamFlowRule&gt;&gt; getWritableDataSource()" />
      <item value="Param Flow Rule" />
      <item value="Writable Data Source" />
      <item value="type:parameter flow rule" />
      <item value="Receiving rule change" />
      <item value="[API Server] Receiving rule change (type:parameter flow rule)" />
      <item value="Lock for a specific resource." />
      <item value="fire Exit" />
      <item value="Slot Chain" />
      <item value="Node Selector Slot" />
      <item value="Following code is an example, &quot;abc&quot; represent a unique name for the protected resource: public void foo() { Entry entry = null; try { entry = SphU.entry(&quot;abc&quot;); // resource that need protection } catch (BlockException blockException) { // when goes there, it is blocked // add blocked handle logic here } catch (Throwable bizException) { // business exception Tracer.trace(bizException); } finally { // ensure finally be executed if (entry != null){ entry.exit(); } } }" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="1560" />
        <entry key="ENGLISH" value="1561" />
        <entry key="ARABIC" value="1" />
        <entry key="IRISH" value="2" />
        <entry key="BULGARIAN" value="7" />
        <entry key="DANISH" value="2" />
        <entry key="RUSSIAN" value="2" />
        <entry key="FRENCH" value="7" />
        <entry key="HAUSA" value="1" />
        <entry key="DUTCH" value="3" />
        <entry key="CATALAN" value="3" />
        <entry key="CORSICAN" value="1" />
        <entry key="LATIN" value="2" />
        <entry key="ROMANIAN" value="4" />
        <entry key="MALAGASY" value="2" />
        <entry key="MALTESE" value="1" />
        <entry key="MALAY" value="2" />
        <entry key="NORWEGIAN" value="1" />
        <entry key="SWEDISH" value="2" />
        <entry key="SLOVAK" value="2" />
        <entry key="SOMALI" value="1" />
        <entry key="WELSH" value="11" />
        <entry key="SPANISH" value="2" />
        <entry key="ITALIAN" value="1" />
        <entry key="SUNDANESE" value="1" />
        <entry key="INDONESIAN" value="1" />
        <entry key="JAVANESE" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
  </component>
</application>