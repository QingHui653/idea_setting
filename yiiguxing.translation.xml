<application>
  <component name="AppStorage">
    <option name="lastSourceLanguage" value="AUTO" />
    <option name="lastTargetLanguage" value="CHINESE" />
    <histories>
      <item value="map" />
      <item value="Adjusts the column width to fit the contents. This process can be relatively slow on large sheets, so this should normally only be called once per column, at the end of your processing. You can specify whether the content of merged cells should be considered or ignored. Default is to ignore merged cells." />
      <item value="Returns cell comment for the specified row and column" />
      <item value="\ u 51 FA \ u 5 E 93\ u 4 FE 1\ u 606 F" />
      <item value="set Width Percentage" />
      <item value="Query and change fields in existing documents either by method * calls or by FDF merging." />
      <item value="Gets the field box positions in the document. The return is an array of &lt;CODE&gt;float&lt;/CODE&gt; * multiple of 5. For each of this groups the values are: [page, llx, lly, urx, * ury]. The coordinates have the page rotation in consideration." />
      <item value="Sets the field value." />
      <item value="*" />
      <item value="Sets a field property. Valid property names are:" />
      <item value="url" />
      <item value="the byte array with the document" />
      <item value="Logistics" />
      <item value="dercarriage" />
      <item value="undercarriage" />
      <item value="designation" />
      <item value="carrier" />
      <item value="Set the bound key to hold the string {@code value} if the bound key is absent." />
      <item value="SETNX" />
      <item value="the prefetch count" />
      <item value="How often to publish idle container events." />
      <item value="the consumerTagStrategy to set" />
      <item value="the missingQueuesFatal to set." />
      <item value="The BackOff to recover." />
      <item value="The recovery interval." />
      <item value="the advice chain to set." />
      <item value="true to reject by default." />
      <item value="set Receive Timeout" />
      <item value="The number of consecutive timeouts to trigger stopping a consumer." />
      <item value="The number of consecutive receives to trigger a new consumer." />
      <item value="The minimum interval between consumer stops." />
      <item value="The minimum interval between new consumer starts." />
      <item value="the transaction size." />
      <item value="the maximum number of consumers." />
      <item value="the minimum number of consumers to create." />
      <item value="the message converter to use" />
      <item value="evict" />
      <item value="FactoryBean for easy configuration of a ConcurrentMapCache when used within a Spring container. Can be configured through bean properties; uses the assigned Spring bean name as the default cache name. Useful for testing or simple caching scenarios, typically in combination with org.springframework.cache.support.SimpleCacheManager or dynamically through ConcurrentMapCacheManager." />
      <item value="Simple cache manager working against a given collection of caches. Useful for testing or simple caching declarations." />
      <item value="Composite CacheManager implementation that iterates over a given collection of delegate CacheManager instances. Allows NoOpCacheManager to be automatically added to the end of the list for handling cache declarations without a backing store. Otherwise, any custom CacheManager may play that role of the last delegate as well, lazily creating cache regions for any requested name. Note: Regular CacheManagers that this composite manager delegates to need to return null from getCache(String) if they are unaware of the specified cache name, allowing for iteration to the next delegate in line. However, most CacheManager implementations fall back to lazy creation of named caches once requested; check out the specific configuration details for a 'static' mode with fixed cache names, if available." />
      <item value="A basic, no operation CacheManager implementation suitable for disabling caching, typically used for backing cache declarations without an actual backing store. Will simply accept any items into the cache not actually storing them." />
      <item value="was not registered for synchronization because synchronization is not active" />
      <item value="Unsupported Encoding Exception" />
      <item value="packet Weight" />
      <item value="measure unit" />
      <item value="concurrent Consumers" />
      <item value="max Concurrent Consumers" />
      <item value="convert Rabbit Access Exception" />
      <item value="Failed to check/redeclare auto-delete queue(s)." />
      <item value="The $MODULE_DIR$ macro is now deprecated" />
    </histories>
  </component>
</application>