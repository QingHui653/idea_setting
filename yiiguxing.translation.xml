<application>
  <component name="AppStorage">
    <histories>
      <item value="uninstall Driver Event" />
      <item value="Wi Si Yi Link Uninstall Request" />
      <item value="LOCK EXPIRE_30" />
      <item value="Executes a mix of inserts, updates, replaces, and deletes." />
      <item value="bulk Write" />
      <item value="Invalid BSON field name customerName" />
      <item value="Put the given key/value pair into this Document and return this. Useful for chaining puts in a single expression, e.g." />
      <item value="Invalid BSON field name customerId" />
      <item value="Creates an empty Document instance." />
      <item value="query Sale Order By Page" />
      <item value="specs Style" />
      <item value="merge Field Type" />
      <item value="replica" />
      <item value="media Part" />
      <item value="media Size" />
      <item value="get System Type()" />
      <item value="记录此次登录是使用超级验证码登录的" />
      <item value="888888" />
      <item value=": Load balancer does not have available server for client: kp-server-corp" />
      <item value="Load balancer does not have available server for client: kp-server-corp" />
      <item value="A pair consisting of two elements" />
      <item value="Cache to support the object identity semantics of autoboxing for values between * -128 and 127 (inclusive) as required by JLS. * * The cache is initialized on first usage. The size of the cache * may be controlled by the {@code -XX:AutoBoxCacheMax=&lt;size&gt;} option. * During VM initialization, java.lang.Integer.IntegerCache.high property * may be set and saved in the private system properties in the * sun.misc.VM class." />
      <item value="clear Arrea Finance Flow Entityr Map" />
      <item value="Get the first value from the pair." />
      <item value="Get the second value from the pair." />
      <item value="check Entry Not Null" />
      <item value="&lt;p&gt;The returned collection isn't threadsafe or serializable, even if * {@code unfiltered} is." />
      <item value="* &lt;p&gt;Many of the filtered collection's methods, such as {@code size()}, * iterate across every element in the underlying collection and determine * which elements satisfy the filter. When a live view is &lt;i&gt;not&lt;/i&gt; needed, * it may be faster to copy {@code Iterables.filter(unfiltered, predicate)} * and use the copy." />
      <item value="Returns the elements of {@code unfiltered} that satisfy a predicate. The * returned collection is a live view of {@code unfiltered}; changes to one * affect the other. * * &lt;p&gt;The resulting collection's iterator does not support {@code remove()}, * but all other collection methods are supported. When given an element that * doesn't satisfy the predicate, the collection's {@code add()} and {@code * addAll()} methods throw an {@link IllegalArgumentException}. When methods * such as {@code removeAll()} and {@code clear()} are called on the filtered * collection, only elements that satisfy the filter will be removed from the * underlying collection." />
      <item value="Provides static methods for working with {@code Collection} instances." />
      <item value="Gwt Compatible" />
      <item value="only" />
      <item value="only element ollection." />
      <item value="Cell" />
      <item value="Doug Lea" />
      <item value="DEFAULT INITIAL CAPACITY" />
      <item value="Case" />
      <item value="Hyphenated variable naming convention, e.g., &quot;lower-hyphen&quot;." />
      <item value="encoded Length" />
      <item value="propagate If Instance Of" />
      <item value="compose" />
      <item value="public static &lt;F, T&gt; Supplier&lt;T&gt; compose(Function&lt;? super F, T&gt; function, Supplier&lt;F&gt; supplier) {" />
      <item value="Funnels" />
      <item value="Small Char Matcher" />
      <item value="dicates" />
      <item value="enum singleton pattern" />
      <item value="referent" />
      <item value="@return &lt;code&gt;true&lt;/code&gt; if this reference object was successfully * enqueued; &lt;code&gt;false&lt;/code&gt; if it was already enqueued or if * it was not registered with a queue when it was created" />
      <item value="&lt;p&gt; This method is invoked only by Java code; when the garbage collector * enqueues references it does so directly, without invoking this method." />
      <item value="Adds this reference object to the queue with which it is registered, * if any." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="2015" />
        <entry key="ENGLISH" value="2016" />
        <entry key="ARABIC" value="1" />
        <entry key="IRISH" value="2" />
        <entry key="BULGARIAN" value="9" />
        <entry key="ICELANDIC" value="1" />
        <entry key="DANISH" value="2" />
        <entry key="GERMAN" value="1" />
        <entry key="RUSSIAN" value="3" />
        <entry key="FRENCH" value="11" />
        <entry key="FINNISH" value="2" />
        <entry key="HAUSA" value="1" />
        <entry key="DUTCH" value="10" />
        <entry key="CATALAN" value="4" />
        <entry key="CORSICAN" value="1" />
        <entry key="LATIN" value="2" />
        <entry key="ROMANIAN" value="6" />
        <entry key="MALAGASY" value="2" />
        <entry key="MALTESE" value="1" />
        <entry key="MALAY" value="3" />
        <entry key="NORWEGIAN" value="3" />
        <entry key="SWEDISH" value="4" />
        <entry key="SAMOAN" value="1" />
        <entry key="SLOVAK" value="2" />
        <entry key="SOMALI" value="1" />
        <entry key="WELSH" value="11" />
        <entry key="SPANISH" value="2" />
        <entry key="GREEK" value="1" />
        <entry key="ITALIAN" value="2" />
        <entry key="SUNDANESE" value="1" />
        <entry key="INDONESIAN" value="4" />
        <entry key="JAVANESE" value="2" />
        <entry key="VIETNAMESE" value="2" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
    <option name="translateDocumentation" value="true" />
  </component>
</application>