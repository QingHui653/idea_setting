<application>
  <component name="AppStorage">
    <histories>
      <item value="Identifies a method on an {@link Endpoint} as being a read operation." />
      <item value="Endpoint to display the zuul proxy routes" />
      <item value="ndpoint to display the zuul proxy routes" />
      <item value="Endpoint for listing Zuul filters." />
      <item value="Initializes various Zuul components including" />
      <item value="Measurement" />
      <item value="Returns a stream consisting of the elements of this stream, additionally performing the provided action on each element as elements are consumed from the resulting stream. This is an intermediate operation." />
      <item value="Returns a stream consisting of the elements of this stream, additionally performing the provided action on each element as elements are consumed from the resulting stream.&#10;This is an intermediate operation." />
      <item value="Returns a stream consisting of the elements of this stream, additionally * performing the provided action on each element as elements are consumed * from the resulting stream. * * &lt;p&gt;This is an &lt;a href=&quot;package-summary.html#StreamOps&quot;&gt;intermediate * operation&lt;/a&gt;. * * &lt;p&gt;For parallel stream pipelines, the action may be called at * whatever time and in whatever thread the element is made available by the * upstream operation. If the action modifies shared state, * it is responsible for providing the required synchronization." />
      <item value="Consumer" />
      <item value="Returns a stream consisting of the elements of this stream, additionally performing the provided action on each element as elements are consumed from the resulting stream. This is an intermediate operation. For parallel stream pipelines, the action may be called at whatever time and in whatever thread the element is made available by the upstream operation. If the action modifies shared state, it is responsible for providing the required synchronization." />
      <item value="Returns a stream consisting of the elements of this stream, additionally performing the provided action on each element as elements are consumed from the resulting stream.&#10;This is an intermediate operation.&#10;For parallel stream pipelines, the action may be called at whatever time and in whatever thread the element is made available by the upstream operation. If the action modifies shared state, it is responsible for providing the required synchronization." />
      <item value="Multipart" />
      <item value="From Multipart" />
      <item value="extract" />
      <item value="A time based monitoring factory that does nothing." />
      <item value="Empty Tracer" />
      <item value="Tracer" />
      <item value="A counter based monitoring factory that does nothing." />
      <item value="Increments the counter of the given name" />
      <item value="A counter based monitoring factory that uses {@link MeterRegistry} to increment counters." />
      <item value="Meter Registry" />
      <item value="A counter based monitoring factory that uses" />
      <item value="corp Id Req" />
      <item value="Discovery" />
      <item value="Sets up a Zuul server endpoint and installs some reverse proxy filters in it, so it can * forward requests to backend servers. The backends can be registered manually through * configuration or via DiscoveryClient." />
      <item value="Set up the application to act as a generic Zuul server without any built-in reverse * proxy features. The routes into the Zuul server can be configured through" />
      <item value="Access-Control-Allow-Origin" />
      <item value="Ribbon Application Context Initializer" />
      <item value="Pivotal Software, Inc." />
      <item value="Responsible for adding in a marker bean to trigger activation of" />
      <item value="Enable Circuit Breaker" />
      <item value="spring.cloud.circuit.breaker.enabled" />
      <item value="Import a single circuit breaker implementation Configuration" />
      <item value="Circuit Breaker" />
      <item value="Annotation to enable a CircuitBreaker implementation." />
      <item value="only if in servlet 3.0 env" />
      <item value="that parses form data and reencodes it for downstream services" />
      <item value="the original HttpServletRequest" />
      <item value="There is a bug in zuul 1.2.2 where HttpServletRequestWrapper.getRequest returns a wrapped request rather than the raw one." />
      <item value="A Servlet 3.0 compliant wrapper." />
      <item value="Detects whether a request is ran through the DispatcherServlet or ZuulServlet. The purpose was to detect this up-front at the very beginning of Zuul filter processing and rely on this information in all filters. RequestContext is used such that the information is accessible to classes which do not have a request reference." />
      <item value="tility class for working with Strings that have placeholder values in them. A placeholder takes the form * {@code ${name}}. Using {@code PropertyPlaceholderHelper} these placeholders can be substituted for * user-supplied values. &lt;p&gt; Values for substitution can be supplied using a {@link Properties} instance or * using a {@link PlaceholderResolver}." />
      <item value="Make the given field accessible, explicitly setting it accessible if * necessary. The {@code setAccessible(true)} method is only called * when actually necessary, to avoid unnecessary conflicts with a JVM * SecurityManager (if active)." />
      <item value="Naming prefix for CGLIB-renamed methods." />
      <item value="CGLIB RENAMED METHOD PREFIX" />
      <item value="if the resource cannot be resolved to" />
      <item value="a corresponding File object" />
      <item value="Resolve the given resource location to a {@code java.io.File}, * i.e. to a file in the file system. * &lt;p&gt;Does not check whether the file actually exists; simply returns * the File that the given location would correspond to. * @param resourceLocation the resource location to resolve: either a * &quot;classpath:&quot; pseudo URL, a &quot;file:&quot; URL, or a plain file path" />
      <item value="a file in the file system" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="1174" />
        <entry key="ENGLISH" value="1175" />
        <entry key="ARABIC" value="1" />
        <entry key="IRISH" value="1" />
        <entry key="BULGARIAN" value="1" />
        <entry key="DANISH" value="2" />
        <entry key="RUSSIAN" value="1" />
        <entry key="FRENCH" value="5" />
        <entry key="CATALAN" value="2" />
        <entry key="CORSICAN" value="1" />
        <entry key="LATIN" value="1" />
        <entry key="ROMANIAN" value="3" />
        <entry key="MALAGASY" value="2" />
        <entry key="MALAY" value="2" />
        <entry key="SWEDISH" value="2" />
        <entry key="SLOVAK" value="2" />
        <entry key="WELSH" value="11" />
        <entry key="SPANISH" value="1" />
        <entry key="SUNDANESE" value="1" />
        <entry key="INDONESIAN" value="1" />
        <entry key="JAVANESE" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
  </component>
</application>