<application>
  <component name="AppStorage">
    <histories>
      <item value="District Id" />
      <item value="Total Sale Debt" />
      <item value="during Debt" />
      <item value="Debt" />
      <item value="during Paid" />
      <item value="cur Debt" />
      <item value="get Total Sale Debt" />
      <item value="is Category Flag" />
      <item value="region" />
      <item value="covert And Complete Product" />
      <item value="process Conflict Products" />
      <item value="ReferenceQueue&lt;?&gt; queue = r.queue;" />
      <item value="enqueued (and even then removed)" />
      <item value="Check that since getting the lock this reference hasn't already been" />
      <item value="lock" />
      <item value="synchronized" />
      <item value="Called only by Reference class" />
      <item value="Reference queues, to which registered reference objects are appended by the * garbage collector after the appropriate reachability changes are detected." />
      <item value="Package-private; must be in same package as the Reference class" />
      <item value="Decrement i modulo len." />
      <item value="Get the entry associated with key. This method * itself handles only the fast path: a direct hit of existing * key. It otherwise relays to getEntryAfterMiss. This is * designed to maximize performance for direct hits, in part * by making this method readily inlinable." />
      <item value="Construct a new map including all Inheritable ThreadLocals * from given parent map. Called only by createInheritedMap." />
      <item value="directly" />
      <item value="Method childValue is visibly defined in subclass * InheritableThreadLocal, but is internally defined here for the * sake of providing createInheritedMap factory method without * needing to subclass the map class in InheritableThreadLocal. * This technique is preferable to the alternative of embedding * instanceof tests in methods." />
      <item value="An extension of ThreadLocal that obtains its initial value from" />
      <item value="Returns the value in the current thread's copy of this thread-local variable. If the variable has no value for the current thread, it is first initialized to the value returned by an invocation of the initialValue method." />
      <item value="Criteria 4 Internal" />
      <item value="This class serves as a parameter block to the Instrumentation.redefineClasses method. Serves to bind the Class that needs redefining together with the new class file bytes." />
      <item value="This interface is designed to work in collusion with java.beans.Beans.instantiate. The interface is intended to provide mechanism to allow the proper initialization of JavaBeans that are also Applets, during their instantiation by java.beans.Beans.instantiate(). Since: 1.2" />
      <item value="This interface is designed to work in collusion with java.beans.Beans.instantiate. The interface is intended to provide mechanism to allow the proper initialization of JavaBeans that are also Applets, during their instantiation by java.beans.Beans.instantiate().&#10;Since:&#10;1.2" />
      <item value="JavaBeans wishing to be nested within, and obtain a reference to their execution environment, or context, as defined by the BeanContext sub-interface shall implement this interface. Conformant BeanContexts shall as a side effect of adding a BeanContextChild object shall pass a reference to itself via the setBeanContext() method of this interface. Note that a BeanContextChild may refuse a change in state by throwing PropertyVetoedException in response. In order for persistence mechanisms to function properly on BeanContextChild instances across a broad variety of scenarios, implementing classes of this interface are required to define as transient, any or all fields, or instance variables, that may contain, or represent, references to the nesting BeanContext instance or other resources obtained from the BeanContext via any unspecified mechanisms." />
      <item value="JavaBeans wishing to be nested within, and obtain a reference to their execution environment, or context, as defined by the BeanContext sub-interface shall implement this interface.&#10;Conformant BeanContexts shall as a side effect of adding a BeanContextChild object shall pass a reference to itself via the setBeanContext() method of this interface.&#10;Note that a BeanContextChild may refuse a change in state by throwing PropertyVetoedException in response.&#10;In order for persistence mechanisms to function properly on BeanContextChild instances across a broad variety of scenarios, implementing classes of this interface are required to define as transient, any or all fields, or instance variables, that may contain, or represent, references to the nesting BeanContext instance or other resources obtained from the BeanContext via any unspecified mechanisms." />
      <item value="This interface is intended to be implemented by, or delegated from, instances of java.beans.beancontext.BeanContext, in order to propagate to its nested hierarchy of java.beans.beancontext.BeanContextChild instances, the current &quot;designTime&quot; property. The JavaBeans™ specification defines the notion of design time as is a mode in which JavaBeans instances should function during their composition and customization in a interactive design, composition or construction tool, as opposed to runtime when the JavaBean is part of an applet, application, or other live Java executable abstraction." />
      <item value="This interface is intended to be implemented by, or delegated from, instances of java.beans.beancontext.BeanContext, in order to propagate to its nested hierarchy of java.beans.beancontext.BeanContextChild instances, the current &quot;designTime&quot; property.&#10;The JavaBeans™ specification defines the notion of design time as is a mode in which JavaBeans instances should function during their composition and customization in a interactive design, composition or construction tool, as opposed to runtime when the JavaBean is part of an applet, application, or other live Java executable abstraction." />
      <item value="The BeanContext acts a logical hierarchical container for JavaBeans." />
      <item value="is Present" />
      <item value="Functional Interface" />
      <item value="//=========================== 常量 ===================================" />
      <item value="supporting 34 decimal digits of significand and an exponent range of -6143 to +6144." />
      <item value="clamp And Round" />
      <item value="Exponent is out of range for Decimal128 encoding:" />
      <item value="isNegative is necessary to detect -0, which can't be represented with a BigDecimal" />
      <item value="ensure Exact Rounding" />
      <item value="A binary integer decimal representation of a 128-bit decimal value, supporting 34 decimal digits of significand and an exponent range * of -6143 to +6144." />
      <item value="only round exactly" />
      <item value="Again, only round exactly" />
      <item value="is Negative" />
      <item value="Na N" />
      <item value="INFINITY MASK" />
      <item value="SIGN BIT MASK" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="1331" />
        <entry key="ENGLISH" value="1332" />
        <entry key="ARABIC" value="1" />
        <entry key="IRISH" value="1" />
        <entry key="BULGARIAN" value="5" />
        <entry key="DANISH" value="2" />
        <entry key="RUSSIAN" value="2" />
        <entry key="FRENCH" value="6" />
        <entry key="HAUSA" value="1" />
        <entry key="CATALAN" value="2" />
        <entry key="CORSICAN" value="1" />
        <entry key="LATIN" value="2" />
        <entry key="ROMANIAN" value="4" />
        <entry key="MALAGASY" value="2" />
        <entry key="MALAY" value="2" />
        <entry key="SWEDISH" value="2" />
        <entry key="SLOVAK" value="2" />
        <entry key="SOMALI" value="1" />
        <entry key="WELSH" value="11" />
        <entry key="SPANISH" value="1" />
        <entry key="SUNDANESE" value="1" />
        <entry key="INDONESIAN" value="1" />
        <entry key="JAVANESE" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
  </component>
</application>