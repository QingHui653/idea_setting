<application>
  <component name="AppStorage">
    <option name="newTranslationDialogWidth" value="596" />
    <option name="newTranslationDialogX" value="879" />
    <option name="newTranslationDialogY" value="486" />
    <histories>
      <item value="component is not authorized by this account rid: 617f803b-4ad78425-1e1694db" />
      <item value="customer Repay Remind Android" />
      <item value="remind Jump URL" />
      <item value="customer Repay Remind" />
      <item value="Weight" />
      <item value="automatic" />
      <item value="STOCK" />
      <item value="Start the Disruptor, starts all threads running" />
      <item value="211020032700" />
      <item value="section Count" />
      <item value="get Purchase Price" />
      <item value="get Finance Flow By Order Negate" />
      <item value="QUIC (Quick UDP Internet Connection) is a new multiplexed and secure transport atop UDP, designed from the ground up and optimized for HTTP2 semantics. HTTP1.1 semantics are layered on HTTP2. &lt;p&gt;QUIC is not natively supported by OkHttp, but provided to allow a theoretical interceptor that provides support." />
      <item value="OkHttp also uses daemon threads for HTTP2 connections. These will exit automatically if they remain idle" />
      <item value="The singleton HTTP client." />
      <item value="use new OkHttpClient.Builder() to create a shared instance with custom settings" />
      <item value="Represents a generic type {@code T}. Java doesn't yet provide a way to represent generic types, so this class does. Forces clients to create a subclass of this class which enables retrieval the type information even at runtime. &lt;p&gt;For example, to create a type literal for {@code List&lt;String&gt;}, you can create an empty anonymous inner class: &lt;pre&gt; TypeReference&amp;lt;List&amp;lt;String&amp;gt;&amp;gt; list = new TypeReference&amp;lt;List&amp;lt;String&amp;gt;&amp;gt;() {}; &lt;pre&gt; This syntax cannot be used to create type literals that have wildcard parameters, such as {@code Class&lt;?&gt;} or {@code List&lt;? extends CharSequence&gt;}." />
      <item value="Type Reference" />
      <item value="{ Object arg0 = map.get(&quot;language&quot;); Object arg1 = map.get(&quot;country&quot;); if(arg0 instanceof String){ String language = (String) arg0; if(arg1 instanceof String){ String country = (String) arg1; return (T) new Locale(language, country); } else if(arg1 == null){ return (T) new Locale(language); } } }" />
      <item value="resolve Proxy Class" />
      <item value="since" />
      <item value="hotmail" />
      <item value="wenshao" />
      <item value="wenshao[szujobs@hotmail.com]" />
      <item value="Disable Circular Reference Detect" />
      <item value="handle Resovle Task" />
      <item value="handle Resolve Task" />
      <item value="Parser Config" />
      <item value="DEFAULT PARSER FEATURE" />
      <item value="config" />
      <item value="parse" />
      <item value="true to check for existence, false to check for absence" />
      <item value="generate Product Label Name Code Mixture Instruction" />
      <item value="Invalid bound statement (not found): co.yixiang.app.common.persistence.dao.SysNoticeMapper.selectNoticeList" />
      <item value="Http Request Method Not Supported Exception" />
      <item value="Be careful when using the 'excludeBranch' or 'excludeRegex' methods. They use regular expressions and their definitions may be error prone. You could exclude more URLs than expected" />
      <item value="changed Keys" />
      <item value="invalid credential, access_token is invalid or not latest rid: 61249bc5-660ad268-2bbafad6" />
      <item value="access token" />
      <item value="read Preference=secondary Preferred" />
      <item value="secondary Preferred" />
      <item value="3000 L" />
      <item value="Wx Ma Template Message" />
      <item value="emphasis Keyword" />
      <item value="is Defined" />
      <item value="is Title Case" />
      <item value="is Lower Case" />
      <item value="is Letter Or Digit" />
      <item value="is Letter" />
      <item value="is Digit" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="2229" />
        <entry key="ENGLISH" value="2230" />
        <entry key="ARABIC" value="1" />
        <entry key="IRISH" value="2" />
        <entry key="BULGARIAN" value="9" />
        <entry key="ICELANDIC" value="1" />
        <entry key="DANISH" value="3" />
        <entry key="GERMAN" value="1" />
        <entry key="RUSSIAN" value="3" />
        <entry key="FRENCH" value="14" />
        <entry key="FINNISH" value="2" />
        <entry key="HAUSA" value="1" />
        <entry key="DUTCH" value="10" />
        <entry key="CATALAN" value="4" />
        <entry key="CORSICAN" value="1" />
        <entry key="LATIN" value="2" />
        <entry key="ROMANIAN" value="7" />
        <entry key="MALAGASY" value="2" />
        <entry key="MALTESE" value="1" />
        <entry key="MALAY" value="3" />
        <entry key="NORWEGIAN" value="3" />
        <entry key="SWEDISH" value="5" />
        <entry key="SAMOAN" value="1" />
        <entry key="SLOVAK" value="2" />
        <entry key="SOMALI" value="1" />
        <entry key="WELSH" value="11" />
        <entry key="SPANISH" value="3" />
        <entry key="GREEK" value="1" />
        <entry key="ITALIAN" value="2" />
        <entry key="HINDI" value="1" />
        <entry key="SUNDANESE" value="1" />
        <entry key="INDONESIAN" value="4" />
        <entry key="JAVANESE" value="2" />
        <entry key="VIETNAMESE" value="3" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1635401311731" />
  </component>
</application>